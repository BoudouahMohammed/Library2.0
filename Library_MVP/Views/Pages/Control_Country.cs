using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Library_MVP.Views.Forms;
using Library_MVP.Views.Interface;
using Library_MVP.Logic.Presenter;
using DevExpress.XtraGrid;

namespace Library_MVP.Views.Controls
{
    public partial class Control_Country : DevExpress.XtraEditors.XtraUserControl, ICountry
    {
        CountryPresenter countryPresenter;
        public Control_Country()
        {
            InitializeComponent();
            //// This line of code is generated by Data Source Configuration Wizard
            //// Fill the SqlDataSource asynchronously
            //sqlDataSource1.FillAsync();
            load();
            countryPresenter = new CountryPresenter(this);
        }

        #region Implement Interface
        public int Id { get => Convert.ToInt32(txbIDCountry.Text.Trim()); set => txbIDCountry.Text = value.ToString(); }
        public string Country_Name { get => txbNameCountry.Text.Trim(); set => txbNameCountry.Text = value.ToString(); }
        object ICountry.btnAdd { get => btnAdd.Enabled; set => btnAdd.Enabled = Convert.ToBoolean(value); }
        object ICountry.btnUpdate { get => btnModifier.Enabled; set => btnModifier.Enabled = Convert.ToBoolean(value); }
        public object btnRemove { get => btnSuprimer.Enabled; set => btnSuprimer.Enabled = Convert.ToBoolean(value); }
        public object btnRemoveAll { get =>btnSuprimerAll.Enabled; set => btnSuprimerAll.Enabled= Convert.ToBoolean(value); }
        object ICountry.txbNameCountry { get => txbNameCountry.Focus(); set => txbNameCountry.Focus(); }
        #endregion

        #region Event Country
        private void Control_Country_Load(object sender, EventArgs e)
        {
            countryPresenter.AutoNumber();
        }
        private void btnAdd_Click(object sender, EventArgs e)
        {
            bool check = countryPresenter.CountryInsert();
            if (check)
            {
                toastNotificationsManager1.ShowNotification("275ca5bd-59bf-43f5-a0d3-0d372010b158");
                load();
            }
            else
            {
                toastNotificationsManager1.ShowNotification("ffe4e270-2b80-42f2-8045-a5feb23f3cc1");
            }
        }
        private void btnModifier_Click(object sender, EventArgs e)
        {
            bool check = countryPresenter.CountryUpdate();
            if (check)
            {
                toastNotificationsManager1.ShowNotification("275ca5bd-59bf-43f5-a0d3-0d372010b158");
                load();
            }
            else
            {
                toastNotificationsManager1.ShowNotification("ffe4e270-2b80-42f2-8045-a5feb23f3cc1");
            }
        }
        private void btnSuprimer_Click(object sender, EventArgs e)
        {
            bool check = countryPresenter.CountryDelete();
            if (check)
            {
                toastNotificationsManager1.ShowNotification("275ca5bd-59bf-43f5-a0d3-0d372010b158");
                load();
            }
            else
            {
                toastNotificationsManager1.ShowNotification("ffe4e270-2b80-42f2-8045-a5feb23f3cc1");
            }
        }
        private void btnSuprimerAll_Click(object sender, EventArgs e)
        {
            bool check = countryPresenter.CountryDeleteAll();
            if (check)
            {
                toastNotificationsManager1.ShowNotification("275ca5bd-59bf-43f5-a0d3-0d372010b158");
                load();
            }
            else
            {
                toastNotificationsManager1.ShowNotification("ffe4e270-2b80-42f2-8045-a5feb23f3cc1");
            }
        }
        private void btnRefriche_Click(object sender, EventArgs e)
        {
            countryPresenter.AutoNumber();
        }
        private void gridControlCountry_DoubleClick(object sender, EventArgs e)
        {
            try
            {
                if (countryPresenter.getCountAllRow() != 0)
                {
                    txbIDCountry.Text = gridViewCountry.GetFocusedRowCellValue("رقم الدولة").ToString();
                    txbNameCountry.Text = gridViewCountry.GetFocusedRowCellValue("اسم الدولة").ToString();
                    countryPresenter.updateRemoveButtons();
                }
            }
            catch (Exception) { }
        }
        private void btnPrint_Click(object sender, EventArgs e)
        {
            gridControlCountry.ShowPrintPreview();
        }
        #endregion

        #region Load DataBase
        public void load()
        {
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }
        #endregion

    }
}
